https://leetcode.com/problems/valid-anagram/description/


*****************************************    Using Hash Array   ***************************************************


class Solution {
    public boolean isAnagram(String s, String t) {
        int vis[] = new int[26];
        int n = s.length();
        int m = t.length();
        if(n != m) return false;
        for(int i = 0; i < n; i++)
        {
            vis[s.charAt(i) - 'a']++;
            vis[t.charAt(i) - 'a']--;
        }
        for(int i = 0; i < n; i++)
        {
            if(vis[i] != 0) return false;
        }
        return true;
    }
}




*********************************************    Using Map   ***************************************************


class Solution {
    public boolean isAnagram(String s, String t) {
        int n = s.length();
        int m = t.length();
        Map<Character,Integer> map = new HashMap<>();

        if(n != m) return false;
        for(int i = 0; i < n; i++)
        {
            if(map.containsKey(s.charAt(i)))
             map.put(s.charAt(i) , map.get(s.charAt(i))+ 1);

             else
             map.put(s.charAt(i) , 1);
        }
         for(int i = 0; i < n; i++)
        {
            if(map.containsKey(t.charAt(i)))
             map.put(t.charAt(i) , map.get(t.charAt(i))- 1);

             else
             map.put(t.charAt(i) , 1);
        }
        for(Map.Entry<Character,Integer> entry:map.entrySet())
         if(entry.getValue() != 0) return false;

         return true;
    }
}
